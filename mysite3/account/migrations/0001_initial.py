# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-22 09:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-username',),
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50)),
            ],
            options={
                'ordering': ('-username',),
            },
            bases=('account.baseuser',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=30, null=True)),
                ('age', models.IntegerField(null=True)),
                ('grade', models.CharField(max_length=30, null=True)),
                ('student_id', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_school', to='account.School')),
                ('school_second', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_school_2', to='account.School')),
            ],
            options={
                'ordering': ('-username',),
            },
            bases=('account.baseuser',),
        ),
        migrations.AddField(
            model_name='class',
            name='school_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.School'),
        ),
        migrations.AddField(
            model_name='user',
            name='student_class',
            field=models.ForeignKey(blank=True, max_length=30, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_class', to='account.Class'),
        ),
        migrations.AddField(
            model_name='user',
            name='student_class_second',
            field=models.ForeignKey(blank=True, max_length=30, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_class_2', to='account.Class'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ManyToManyField(blank=True, to='account.Teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together=set([('school_name', 'class_name')]),
        ),
    ]
